{"version":3,"file":"index.js","mappings":"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","sources":["webpack://magic-gallery/./src/edit.js","webpack://magic-gallery/./src/save.js","webpack://magic-gallery/external window [\"wp\",\"blockEditor\"]","webpack://magic-gallery/external window [\"wp\",\"blocks\"]","webpack://magic-gallery/external window [\"wp\",\"components\"]","webpack://magic-gallery/external window [\"wp\",\"i18n\"]","webpack://magic-gallery/external window \"React\"","webpack://magic-gallery/external window \"ReactJSXRuntime\"","webpack://magic-gallery/webpack/bootstrap","webpack://magic-gallery/webpack/runtime/compat get default export","webpack://magic-gallery/webpack/runtime/define property getters","webpack://magic-gallery/webpack/runtime/hasOwnProperty shorthand","webpack://magic-gallery/webpack/runtime/make namespace object","webpack://magic-gallery/./src/index.js"],"sourcesContent":["/**\n * Retrieves the translation of text.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/packages/packages-i18n/\n */\nimport { __ } from \"@wordpress/i18n\";\n\n/**\n * Imports the InspectorControls component, which is used to wrap\n * the block's custom controls that will appear in in the Settings\n * Sidebar when the block is selected.\n *\n * Also imports the React hook that is used to mark the block wrapper\n * element. It provides all the necessary props like the class name.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/packages/packages-block-editor/#inspectorcontrols\n * @see https://developer.wordpress.org/block-editor/reference-guides/packages/packages-block-editor/#useblockprops\n */\nimport { InspectorControls, useBlockProps } from \"@wordpress/block-editor\";\n\n/**\n * Imports the necessary components that will be used to create\n * the user interface for the block's settings.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/components/panel/#panelbody\n * @see https://developer.wordpress.org/block-editor/reference-guides/components/text-control/\n * @see https://developer.wordpress.org/block-editor/reference-guides/components/toggle-control/\n */\nimport { PanelBody, TextControl, ToggleControl } from \"@wordpress/components\";\n\n/**\n * Imports the useEffect React Hook. This is used to set an attribute when the\n * block is loaded in the Editor.\n *\n * @see https://react.dev/reference/react/useEffect\n */\nimport { useEffect } from \"react\";\n\n/**\n * The edit function describes the structure of your block in the context of the\n * editor. This represents what the editor will render when the block is used.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-edit-save/#edit\n *\n * @param {Object}   props               Properties passed to the function.\n * @param {Object}   props.attributes    Available block attributes.\n * @param {Function} props.setAttributes Function that updates individual attributes.\n *\n * @return {Element} Element to render.\n */\nexport default function Edit({ attributes, setAttributes }) {\n  const { fallbackCurrentYear, showStartingYear, startingYear } = attributes;\n\n  // Get the current year and make sure it's a string.\n  const currentYear = new Date().getFullYear().toString();\n\n  // When the block loads, set the fallbackCurrentYear attribute to the\n  // current year if it's not already set.\n  useEffect(() => {\n    if (currentYear !== fallbackCurrentYear) {\n      setAttributes({ fallbackCurrentYear: currentYear });\n    }\n  }, [currentYear, fallbackCurrentYear, setAttributes]);\n\n  let displayDate;\n\n  // Display the starting year as well if supplied by the user.\n  if (showStartingYear && startingYear) {\n    displayDate = startingYear + \"–\" + currentYear;\n  } else {\n    displayDate = currentYear;\n  }\n\n  return (\n    <>\n      <InspectorControls>\n        <PanelBody title={__(\"Settings\", \"magic-gallery\")}>\n          <ToggleControl\n            checked={showStartingYear}\n            label={__(\"Show starting year\", \"magic-gallery\")}\n            onChange={() =>\n              setAttributes({\n                showStartingYear: !showStartingYear,\n              })\n            }\n          />\n          {showStartingYear && (\n            <TextControl\n              label={__(\"Starting year\", \"magic-gallery\")}\n              value={startingYear}\n              onChange={(value) => setAttributes({ startingYear: value })}\n            />\n          )}\n        </PanelBody>\n      </InspectorControls>\n      <p {...useBlockProps()}>© {displayDate}</p>\n    </>\n  );\n}\n","/**\n * React hook that is used to mark the block wrapper element.\n * It provides all the necessary props like the class name.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/packages/packages-block-editor/#useblockprops\n */\nimport { useBlockProps } from \"@wordpress/block-editor\";\n\n/**\n * The save function defines the way in which the different attributes should\n * be combined into the final markup, which is then serialized by the block\n * editor into `post_content`.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-edit-save/#save\n *\n * @param {Object} props            Properties passed to the function.\n * @param {Object} props.attributes Available block attributes.\n *\n * @return {Element} Element to render.\n */\nexport default function save({ attributes }) {\n  const { fallbackCurrentYear, showStartingYear, startingYear } = attributes;\n\n  // If there is no fallbackCurrentYear, which could happen if the block\n  // is loaded from a template/pattern, return null. In this case, block\n  // rendering will be handled by the render.php file.\n  if (!fallbackCurrentYear) {\n    return null;\n  }\n\n  let displayDate;\n\n  // Display the starting year as well if supplied by the user.\n  if (showStartingYear && startingYear) {\n    displayDate = startingYear + \"–\" + fallbackCurrentYear;\n  } else {\n    displayDate = fallbackCurrentYear;\n  }\n\n  return <p {...useBlockProps.save()}>© {displayDate}</p>;\n}\n","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"React\"];","module.exports = window[\"ReactJSXRuntime\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * Registers a new block provided a unique name and an object defining its behavior.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/#registering-a-block\n */\nimport { registerBlockType } from \"@wordpress/blocks\";\n\n/**\n * Internal dependencies\n */\nimport Edit from \"./edit\";\nimport save from \"./save\";\nimport metadata from \"./block.json\";\n\n/**\n * Define a custom SVG icon for the block. This icon will appear in\n * the Inserter and when the user selects the block in the Editor.\n */\nconst icon = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    width=\"48\"\n    height=\"48\"\n    aria-hidden=\"true\"\n    focusable=\"false\"\n  >\n    <path d=\"M4 20h8v-1.5H4V20zM18.9 3.5c-.6-.6-1.5-.6-2.1 0l-7.2 7.2c-.4-.1-.7 0-1.1.1-.5.2-1.5.7-1.9 2.2-.4 1.7-.8 2.2-1.1 2.7-.1.1-.2.3-.3.4l-.6 1.1H6c2 0 3.4-.4 4.7-1.4.8-.6 1.2-1.4 1.3-2.3 0-.3 0-.5-.1-.7L19 5.7c.5-.6.5-1.6-.1-2.2zM9.7 14.7c-.7.5-1.5.8-2.4 1 .2-.5.5-1.2.8-2.3.2-.6.4-1 .8-1.1.5-.1 1 .1 1.3.3.2.2.3.5.2.8 0 .3-.1.9-.7 1.3z\"></path>\n  </svg>\n);\n\n/**\n * Every block starts by registering a new block type definition.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/#registering-a-block\n */\nregisterBlockType(metadata.name, {\n  icon: icon,\n  /**\n   * @see ./edit.js\n   */\n  edit: Edit,\n  /**\n   * @see ./save.js\n   */\n  save,\n});\n"],"names":["__","InspectorControls","useBlockProps","PanelBody","TextControl","ToggleControl","useEffect","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Edit","attributes","setAttributes","fallbackCurrentYear","showStartingYear","startingYear","currentYear","Date","getFullYear","toString","displayDate","children","title","checked","label","onChange","value","save","registerBlockType","metadata","icon","xmlns","viewBox","width","height","focusable","d","name","edit"],"sourceRoot":""}